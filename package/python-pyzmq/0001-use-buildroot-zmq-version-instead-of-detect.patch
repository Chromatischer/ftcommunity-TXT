detect.py: fix the ZMQ version check to the ZMQ version of the buildroot

The setup.py script tries to compile a test C program and runs it, to
retrieve a version string for the installed ZMQ library, but if the cross
compiler links it together, the result cannot be run on the host, due to
different architectures and libraries.

And if the host compiler would compile/link it, it would not link with the
library version inside buildroot but with the library from the host, possibly returning a wrong version number.

Instead of trying to run the compiled test program to get the version
dynamically, return the version of the buildroot environment.

Signed-off-by: Michael Rommel <rommel@layer-7.net>

Refreshed patch for pyzmq-16.0.1

Signed-off-by: Richard Kunze <richard.kunze@web.de>
--- python-pyzmq-16.0.1/buildutils/detect.py.orig	2016-11-19 23:19:18.712699849 +0100
+++ python-pyzmq-16.0.1/buildutils/detect.py	2016-11-19 23:29:30.711734588 +0100
@@ -119,12 +119,13 @@
     efile = test_compilation(cfile, compiler=cc)
     patch_lib_paths(efile, cc.library_dirs)
     
-    rc, so, se = get_output_error([efile])
-    if rc:
-        msg = "Error running version detection script:\n%s\n%s" % (so,se)
-        logging.error(msg)
-        raise IOError(msg)
+    #rc, so, se = get_output_error([efile])
+    #if rc:
+    #    msg = "Error running version detection script:\n%s\n%s" % (so,se)
+    #    logging.error(msg)
+    #    raise IOError(msg)
 
+    so = "vers: ##ZEROMQ_VERSION##"
     handlers = {'vers':  lambda val: tuple(int(v) for v in val.split('.'))}
 
     props = {}
